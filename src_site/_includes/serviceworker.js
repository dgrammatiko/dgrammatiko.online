const t=`dGrammatiko-${VERSION}`,e=["/","/index-top.html","/index-bottom.html","/offline.content.html","/offline.html","/manifest.json","/static/fonts/dgrammatiko.woff2","/static/fonts/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_LjQbMZhKSbpUVzEEQ.woff","/static/js/ce-theme-switcher.esm.js"];self.addEventListener("install",(t=>{self.skipWaiting()})),self.addEventListener("activate",(a=>{a.waitUntil(async function(){await clients.claim();const a=await caches.keys();await Promise.all(a.filter((e=>t!==e)).map((t=>caches.delete(t))));const n=await caches.open(t);e.filter((t=>!(t in n))).map((async t=>n.put(t,await fetch(t))))}())})),self.onfetch=async e=>{const{request:a}=e;"GET"===a.method&&("navigate"===a.mode?e.respondWith(async function(e){const n=new URL(a.url),c=await caches.open(t),i=await c.match(a);if(i)return i;if(!(n.pathname in routes)&&"/"!==n.pathname){let t,e=!1;try{t=await fetch(a,{redirect:"follow"}),e=!0}catch(e){t=await caches.match("/offline.html")}return t&&e&&c.put(a,t.clone()),t}/\/index\.html$/.test(n.pathname)?n.pathname=n.pathname.replace(/index\.html$/,"index.content.html"):n.pathname=/\/$/.test(n.pathname)?`${n.pathname}index.content.html`:`${n.pathname}/index.content.html`,e.waitUntil(async function(t){let e,a,i;const s=await(await caches.match("/index-top.html")).body,o=await(await caches.match("/index-bottom.html")).body;try{i=await fetch(n,{redirect:"follow"})}catch(t){return new Response(await caches.match("/offline.content.html"),{headers:{"Content-Type":"text/html; charset=utf-8"}})}const h=await i.body;if("function"==typeof TransformStream){let{writable:t}=new TransformStream;a=[s,h,o].reduce(((e,a,n,c)=>e.then((()=>a.pipeTo(t,{preventClose:n+1!==c.length})))),Promise.resolve())}else a=`${s.text()}${h.text()}${o.text()}`;return e=new Response(a,{headers:{"Content-Type":"text/html; charset=utf-8"}}),c.put(t.request,e)}(e))}(e)):e.respondWith(async function(){const e=await caches.open(t),n=await e.match(a);if(n)return n;let c;try{c=await fetch(a)}catch(t){}return c&&e.put(a,c.clone()),c}()))};
