const t=`dGrammatiko-static-${VERSION}`,e="addEventListener",a=["/static/fonts/dgrammatiko.woff2","/static/fonts/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_LjQbMZhKSbpUVzEEQ.woff","/static/js/ce-theme-switcher.esm.js","/","/index-top.html","/index-bottom.html","/offline.content.html","/offline.html"];async function n(t,e){const a=await e.match(t.request);if(a)return a}self[e]("install",(async function(e){skipWaiting(),e.waitUntil(async function(){const e=await caches.open(t);await e.addAll(a)}())})),self[e]("activate",(async function(e){e.waitUntil((async()=>{const e=await caches.keys();await Promise.all(e.map((e=>{if(t!==e)return caches.delete(e)})))})())})),self[e]("fetch",(async function(e){if("GET"!==e.request.method)return;if("navigate"===e.request.mode)return await async function(e){const a=new URL(e.request.url);if("navigate"!==e.request.mode||!ROUTES.includes(a.pathname)&&"/"!==a.pathname)return;const i=await caches.open(t),c=await n(e,i);if(c)return c;let s=!1;const o=await fetch(a.toString()).catch((()=>{s=!0,caches.match("/offline.html")}));if("document"===e.request.destination&&!s)return i.put(e.request,o);return o}(e);const a=await caches.open(t),i=await n(e,a);return i||await fetch(e.request).catch((()=>{failed=!0,caches.match("/offline.html")}))}));
