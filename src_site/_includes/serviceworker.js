const t=`dGrammatiko-${VERSION}`,e=["/index-top.html","/index-bottom.html","/offline.content.html","/offline.html","/manifest.json","/static/fonts/dgrammatiko.woff2","/static/fonts/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_LjQbMZhKSbpUVzEEQ.woff","/static/js/ce-theme-switcher.esm.js"];addEventListener("install",(a=>{skipWaiting(),a.waitUntil(async function(){const a=await caches.open(t);await a.addAll(e)}())})),addEventListener("activate",(e=>{e.waitUntil(async function(){const e=await caches.keys();await Promise.all(e.map((e=>{if(e!==t)return caches.delete(e)})))}())}));class a{constructor(){let t,e;this.readable=new ReadableStream({start(e){t=e},cancel(t){e.error(t)}}),this.writable=new WritableStream({start(t){e=t},write(e){t.enqueue(e)},close(){t.close()},abort(e){t.error(e)}})}}addEventListener("fetch",(e=>{const n=new URL(e.request.url);"GET"===e.request.method&&e.respondWith(async function(){const c=await caches.match(e.request);return c||(n.origin===location.origin&&"navigate"===e.request.mode&&"function"==typeof WritableStream?async function(e,n){const c=n;c.pathname=/\/index\.html$/.test(c.pathname)?c.pathname.replace(/index.html$/,"index.content.html"):/\/$/.test(c.pathname)?`${c.pathname}index.content.html`:`${c.pathname}/index.content.html`;const i=[caches.match("/index-top.html"),fetch(c).catch((()=>caches.match("/offline.content.html"))),caches.match("/index-bottom.html")],s=new a;e.waitUntil(async function(){for(const t of i){const e=await t;await e.body.pipeTo(s.writable,{preventClose:!0})}s.writable.getWriter().close()}());const o=await caches.open(t),r=new Response(s.readable,{headers:{"Content-Type":"text/html; charset=utf-8"}});return await o.put(e.request,r.clone()),r}(e,n):await fetch(e.request).then((async a=>{const n=await caches.open(t);return await n.put(e.request,a.clone()),a})).catch((()=>caches.match("/offline.html"))))}())}));
