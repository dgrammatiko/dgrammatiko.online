const t=`dGrammatiko-${VERSION}`,e=["/index-top.html","/index-bottom.html","/offline.content.html","/offline.html","/manifest.json","/static/fonts/dgrammatiko.woff2","/static/fonts/Qw3PZQNVED7rKGKxtqIqX5E-AVSJrOCfjY46_LjQbMZhKSbpUVzEEQ.woff","/static/js/ce-theme-switcher.esm.js"];addEventListener("install",(n=>{skipWaiting(),n.waitUntil(async function(){const n=await caches.open(t);await n.addAll(e)}())})),addEventListener("activate",(e=>{e.waitUntil(async function(){const e=await caches.keys();await Promise.all(e.map((e=>{if(e!==t)return caches.delete(e)})))}())}));class n{constructor(){let t,e;this.readable=new ReadableStream({start(e){t=e},cancel(t){e.error(t)}}),this.writable=new WritableStream({start(t){e=t},write(e){t.enqueue(e)},close(){t.close()},abort(e){t.error(e)}})}}addEventListener("fetch",(e=>{const{request:a}=e;"only-if-cached"===a.cache&&"same-origin"!==a.mode||e.respondWith(async function(){const c=await caches.open(t),o=new URL(a.url);if("GET"!==a.method||"navigate"!==a.mode)return;const i=await c.match(a);if(i)return i;if(routes.contains(a.url.pathname)&&"function"==typeof WritableStream){const t=async function(t,e){e.pathname=/\/index\.html$/.test(e.pathname)?e.pathname.replace(/index.html$/,"index.content.html"):/\/$/.test(e.pathname)?`${e.pathname}index.content.html`:`${e.pathname}/index.content.html`,console.log(e.pathname);const a=[caches.match("/index-top.html"),fetch(e).catch((()=>caches.match("/offline.content.html"))),caches.match("/index-bottom.html")],c=new n;return t.waitUntil(async function(){for(const t of a){const e=await t;await e.body.pipeTo(c.writable,{preventClose:!0})}c.writable.getWriter().close()}()),new Response(c.readable,{headers:{"Content-Type":"text/html; charset=utf-8"}})}(e,o);let i=t.clone();return c.put(a,i),t}fetch(a).then((t=>{let e=t.clone();return c.put(a,e),t})).catch((()=>caches.match("/offline.html")))}())}));
